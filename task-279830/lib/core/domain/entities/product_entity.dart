import 'package:task_279830/core/domain/base_entites/amount.dart';
import 'package:task_279830/core/domain/enums/category_enum.dart';

/// Модель продукта.
///
/// Содержит в себе название, цену, категорию и ссылку на изображение.
class ProductEntity {
  /// Название товара.
  final String title;

  /// Цена товара в копейках. Без скидки.
  ///
  /// Подумайте и ответьте на три вопроса:
  /// 1. Почему цена хранится в копейках, а не в рублях?
  /// 2. Почему тип данных цены - [int], а не [double]?
  /// 3. Как можно было реализовать передачу цены иначе?
  ///
  /// Ответы на вопросы разместите тут (они будут проверены при код-ревью):
  ///
  /// 1. Копейка является нижней неделимой величиной российской валюты, из-за чего любое значение цены товара можно привести
  /// к эквивалентному целочисленному значению в копейках. Что является обязательным для работы с денежными данными в любой системе,
  /// из-за проблем с нормализация данных в типах данных с плавающей запятой. Плюс в реализации dart у формата double поведение может отличатся в зависимости от платформы,
  /// так как в вебе код и форматы интерпретируются в javascript.
  /// 2. Использование [double] как формата с плавающей запятой, и хранение в остатке значения в копейках, неизбежно
  /// приведет, к ошибкам вовремя округления после арифметических операций.
  /// 3. Поскольку в dart для работы с числами в наличие есть только два формата данны, один из которых и так работает,
  /// а другой точно не подходит. То альтернативным путем передачи данных таких денежных данных без потерь точности может быть только,
  /// только кастомная модель из двух полей типа [int] для рублей и копеек, и см описными функциями для арифметических операций с ней.
  /// Как по мне такой вариант громоздкий, неудобный и очень сложно проецируется на другие валюты. Из-за чего малопригоден, но жизнеспособен.
  final int price;

  /// Категория товара.
  final Category category;

  /// Ссылка на изображение товара.
  final String imageUrl;

  /// Количество товара.
  ///
  /// Может быть описано в граммах [Grams] или в штуках [Quantity].
  final Amount amount;

  /// Скидка на товар.
  ///
  /// Требуется высчитать самостоятельно итоговую цену товара.
  final double sale;

  ProductEntity({
    required this.title,
    required this.price,
    required this.category,
    required this.imageUrl,
    required this.amount,
    this.sale = 0,
  });
}
